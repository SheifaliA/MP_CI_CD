name: CI Pipeline
on:
  push:
    paths:
      - 'vehicleinsurance_model/datasets/**'
  workflow_dispatch:

jobs:
  train:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: pip install -r requirements/requirements.txt
    - name: Identify latest dataset
      run: |
        latest_file=$(ls -t vehicleinsurance_model/datasets | head -n 1)
        echo "Latest file: $latest_file"
        if [[ -z "$latest_file" ]]; then
            echo "No dataset file found. Exiting."
            exit 1
        fi
        cat vehicleinsurance_model/config.yml
        if grep -q "^training_data_file:" vehicleinsurance_model/config.yml; then
            echo "Inside if - Updating training_data_file"
            grep -v "^training_data_file:" vehicleinsurance_model/config.yml > temp_config.yml && mv temp_config.yml vehicleinsurance_model/config.yml
            echo "training_data_file: $latest_file" >> vehicleinsurance_model/config.yml
            grep "training_data_file" vehicleinsurance_model/config.yml
            # cat vehicleinsurance_model/config.yml
        else
            echo "Adding new training_data_file entry"
            echo "training_data_file: $latest_file" >> vehicleinsurance_model/config.yml
            grep "training_data_file" vehicleinsurance_model/config.yml
            # cat vehicleinsurance_model/config.yml
        fi
    - name: Commit Updated Config.YML
      id: commit_changes
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "actions@github.com"
        git add vehicleinsurance_model/config.yml
        if git diff --cached --exit-code; then
            echo "No changes detected in config.yml. Skipping commit."
            echo "NO_CHANGES=true" >> $GITHUB_ENV
            echo "::set-output name=changes_detected::false"
            exit 0
        fi
        git commit -m "Updated config.yml after training"
        git remote set-url origin https://x-access-token:${{ secrets.REPO_TOKEN }}@github.com/SheifaliA/MP_CI_CD.git
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}  
    - name: Train and save pipeline
      if: steps.commit_changes.outputs.changes_detected != 'false'
      run: python vehicleinsurance_model/train_pipeline.py
    - uses: actions/upload-artifact@v4
      if: steps.commit_changes.outputs.changes_detected != 'false'
      with:
        name: my-trained-pipeline
        path: vehicleinsurance_model/trained_models/*.pkl
        retention-days: 1
  test:
    needs: train
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    if: needs.train.outputs.changes_detected != 'false' 
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - uses: actions/download-artifact@v4
      with:
        name: my-trained-pipeline
        path: vehicleinsurance_model/trained_models
    - name: Install dependencies
      run: |
        pip install -r requirements/test_requirements.txt
        pip install pyyaml 
    - name: Test with pytest
      run: |
        echo "Current working directory:"
        pwd
        ls -l vehicleinsurance_model/config.yml
        echo "Fetching latest repository changes..."
        git pull origin main
        echo "Verifying config.yml before tests:"
        cat vehicleinsurance_model/config.yml | grep "training_data_file"
        rm -rf vehicleinsurance_model/__pycache__
        rm -rf .pytest_cache
        find . -name "*.pyc" -delete
        pytest
  build:
    needs: [train, test]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    if: needs.train.outputs.changes_detected != 'false'
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - uses: actions/download-artifact@v4
      with:
        name: my-trained-pipeline
        path: vehicleinsurance_model/trained_models
    - name: Install dependencies
      run: pip install --upgrade build
    - name: Build the package
      run: |
        python -m build
        mv dist/*.whl vehicleinsurance_api/
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: my-build-package
        path: vehicleinsurance_api/*.whl
        retention-days: 2
    - name: List files to verify move
      run: ls -l vehicleinsurance_api/
  push-image:
    needs: [train, test, build]
    runs-on: ubuntu-latest
    if: needs.train.outputs.changes_detected != 'false'
    steps:
    - name: Repo Checkout
      uses: actions/checkout@v2
    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: my-build-package
        path: vehicleinsurance_api/
    - name: Verify Artifact Presence
      run: ls -R vehicleinsurance_api/     
    - name: Login to Docker hub
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASS_TOKEN }}
      run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD 
    - name: Build the Docker image for Fastapi app
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
      run: |
        ls -l vehicleinsurance_api/
        docker build . -f Dockerfile -t $DOCKER_USER/vehicleinsurance-fastapi:latest
    - name: Push the Docker Image
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
      run: docker push $DOCKER_USER/vehicleinsurance-fastapi

    - name: Logout to Docker hub
      run: docker logout

